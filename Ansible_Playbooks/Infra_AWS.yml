---

- hosts: localhost
  connection: local
  gather_facts: False


  tasks:

    - name: Create an IAM Role for the EKS Cluster
      community.aws.iam_role:
        state: present
        profile: "{{ profile_aws }}"
        name: "{{ owner }}_eks_role"
        region: "{{ region }}"
        assume_role_policy_document: "{{ lookup('file','./Files/policy_eks_assume_role.json') }}"
        managed_policies:
          - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
          - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
        tags:
          Owner: "{{ mail }}"
          Source: ansible
      register: iam_eks_role
      tags:
        - create

#AWS limits the number of IPs per instance type: https://github.com/awslabs/Amazon-eks-AMI/blob/master/files/eni-max-pods.txt
#The number of PODs per node is limited based on that max number of IP address.
#For instance t3.micro is limited to 4 pods max, t3.small is limited to 11 pods max.
#So, we must know in advance the number of pods we will need.
#Else, we will need to scale the cluster to support additionnal PODs.

    - name: Create EKS Cluster
      command: eksctl create cluster --profile {{ profile_aws }} --name "{{ owner }}-eks-cluster" --version 1.21 --region "{{ region }}" --vpc-cidr "{{ cidr_eks_vpc }}" --tags "Owner={{ mail }},Source=ansible" --nodegroup-name standard-workers --node-type t3.small --nodes 3 --nodes-min 1 --nodes-max 4 --managed
      register: eks_cluster
      until: eks_cluster.rc == 0
      delay: 10
      retries: 100
      tags:
        - create


    - name: Update Kubeconfig to enable to connect to the EKS Cluster
      command: aws eks update-kubeconfig --profile {{ profile_aws }} --name "{{ owner }}-eks-cluster" --region "{{ region }}"
      register: eks_kubeconfig
      tags:
        - create



    - name: Delete the EKS Cluster
      command: eksctl delete cluster --profile {{ profile_aws }} --name "{{ owner }}-eks-cluster" --region "{{ region }}" --wait
      register: delete_eks_cluster
      tags:
        - destroy


    - name: Delete the IAM Role for the EKS Cluster
      community.aws.iam_role:
        state: absent
        profile: "{{ profile_aws }}"
        name: "{{ owner }}_eks_role"
        region: "{{ region }}"
        delete_instance_profile: true
      register: delete_iam_eks_role
      tags:
        - destroy



